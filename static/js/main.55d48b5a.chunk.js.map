{"version":3,"sources":["components/Searchbar/Serachbar.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/Button/Button.jsx","components/ImageGallery/ImageGallery.jsx","components/Modal/Modal.jsx","services/pixabay-api.js","App.js","index.js"],"names":["SearchBar","state","input","handleNameChange","event","setState","currentTarget","value","toLowerCase","handleSubmit","preventDefault","trim","props","onSubmit","toast","warn","className","this","type","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","id","url","tags","largeImgUrl","src","alt","data-url","Button","onClick","ImageGallery","handleImageClick","evt","target","tagName","dataset","pictures","error","status","color","height","width","style","textAlign","length","map","picture","toString","webformatURL","largeImageURL","onLoadMore","Modal","handleKeyDown","e","code","onClose","hadleBackdropClick","window","addEventListener","removeEventListener","API","fetchPictures","query","page","fetch","then","res","ok","json","Promise","reject","Error","modalRoot","document","querySelector","App","showModal","modalContent","hits","catch","handleSearchSubmit","searchQuery","imgSrc","toggleModal","handleLoadMore","prevProps","prevState","scrollTo","top","documentElement","scrollHeight","behavior","autoClose","createPortal","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.55d48b5a.chunk.js","sourcesContent":["import \"./SearchbarStyles.css\";\r\nimport { Component } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default class SearchBar extends Component {\r\n  static propTypes = { onSubmit: PropTypes.func };\r\n\r\n  state = {\r\n    input: \"\",\r\n  };\r\n\r\n  handleNameChange = (event) => {\r\n    this.setState({ input: event.currentTarget.value.toLowerCase() });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (this.state.input.trim() === \"\") {\r\n      toast.warn(\"You have to type something!\");\r\n      return;\r\n    }\r\n    this.props.onSubmit(this.state.input);\r\n    this.setState({ input: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            value={this.state.input}\r\n            onChange={this.handleNameChange}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n","import \"./ImageGalleryItemStyles.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ImageGalleryItem = ({ id, url, tags, largeImgUrl }) => {\r\n  return (\r\n    <li className=\"ImageGalleryItem\" key={id}>\r\n      <img\r\n        src={url}\r\n        alt={tags}\r\n        className=\"ImageGalleryItem-image\"\r\n        data-url={largeImgUrl}\r\n      />\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n\r\nImageGalleryItem.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  url: PropTypes.string.isRequired,\r\n  tags: PropTypes.string.isRequired,\r\n  largeImgUrl: PropTypes.string.isRequired,\r\n};\r\n","import \"./ButtonStyles.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Button({ onClick }) {\r\n  return (\r\n    <button type=\"button\" className=\"Button\" onClick={onClick}>\r\n      Load More\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Button;\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func,\r\n};\r\n","// Styles\r\nimport \"./ImageGalleryStyles.css\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\n// Utilities components\r\nimport { Component } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n// Custom Components\r\nimport Loader from \"react-loader-spinner\";\r\nimport ImageGalleryItem from \"../ImageGalleryItem\";\r\nimport Button from \"../Button\";\r\n\r\nexport default class ImageGallery extends Component {\r\n  static propTypes = {\r\n    pictures: PropTypes.arrayOf(PropTypes.object),\r\n    status: PropTypes.string.isRequired,\r\n    error: PropTypes.string,\r\n    onClick: PropTypes.func.isRequired,\r\n    onLoadMore: PropTypes.func.isRequired,\r\n  };\r\n\r\n  handleImageClick = (evt) => {\r\n    if (evt.target.tagName === \"IMG\") {\r\n      this.props.onClick(evt.target.dataset.url, evt.target.alt);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { pictures, error, status } = this.props;\r\n\r\n    if (status === \"idle\") {\r\n      return <div className=\"message\">Let's find some nice pictures!</div>;\r\n    }\r\n\r\n    if (status === \"pending\") {\r\n      return (\r\n        <Loader\r\n          type=\"ThreeDots\"\r\n          color=\"#00BFFF\"\r\n          height={120}\r\n          width={120}\r\n          style={{ textAlign: \"center\" }}\r\n        />\r\n      );\r\n    }\r\n    if (status === \"rejected\") {\r\n      return toast.error(error);\r\n    }\r\n\r\n    if (status === \"resolved\" && pictures.length !== 0) {\r\n      return (\r\n        <>\r\n          <ul className=\"ImageGallery\" onClick={this.handleImageClick}>\r\n            {pictures.map((picture) => (\r\n              <ImageGalleryItem\r\n                id={toString(picture.id)}\r\n                url={picture.webformatURL}\r\n                tags={picture.tags}\r\n                largeImgUrl={picture.largeImageURL}\r\n              />\r\n            ))}\r\n          </ul>\r\n          <Button onClick={this.props.onLoadMore} />\r\n        </>\r\n      );\r\n    } else {\r\n      return <div className=\"message\">We didn't find such picture...</div>;\r\n    }\r\n  }\r\n}\r\n","import \"./ModalStyles.css\";\r\nimport { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default class Modal extends Component {\r\n  static propTypes = {\r\n    src: PropTypes.string,\r\n    alt: PropTypes.string,\r\n    onClose: PropTypes.func,\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = (e) => {\r\n    if (e.code === \"Escape\") {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  hadleBackdropClick = (e) => {\r\n    if (e.target === e.currentTarget) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"Overlay\" onClick={this.hadleBackdropClick}>\r\n        <div className=\"Modal\">\r\n          <img src={this.props.src} alt={this.props.alt} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","function fetchPictures(query, page) {\r\n  const BASE_URL = \"https://pixabay.com/api/\";\r\n  const API_KEY = \"19028300-83b376d79bd6a99c9e2183deb\";\r\n  return fetch(\r\n    `${BASE_URL}?image_type=photo&orientation=horizontal&q=${query}&page=${page}&per_page=12&key=${API_KEY}`\r\n  ).then((res) => {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(new Error(\"Something is wrong, please try again\"));\r\n  });\r\n}\r\n\r\nconst API = {\r\n  fetchPictures,\r\n};\r\n\r\nexport default API;\r\n","import \"./App.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { Component } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport Searchbar from \"./components/Searchbar\";\nimport ImageGallery from \"./components/ImageGallery\";\nimport Modal from \"./components/Modal\";\nimport API from \"./services/pixabay-api\";\n\nconst modalRoot = document.querySelector(\"#modal-root\");\nexport default class App extends Component {\n  state = {\n    query: \"\",\n    page: 1,\n    pictures: [],\n    error: null,\n    status: \"idle\",\n    showModal: false,\n    modalContent: {\n      url: \"\",\n      alt: \"\",\n    },\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevQuery = prevState.query;\n    const currentQuery = this.state.query;\n\n    if (prevQuery !== currentQuery) {\n      this.setState({ status: \"pending\" });\n\n      this.fetchPictures();\n    }\n\n    if (prevState.page !== this.state.page) {\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: \"smooth\",\n      });\n    }\n  }\n\n  fetchPictures = () => {\n    API.fetchPictures(this.state.query, this.state.page)\n      .then((res) =>\n        this.setState(({ pictures, page }) => ({\n          pictures: [...pictures, ...res.hits],\n          status: \"resolved\",\n          page: page + 1,\n        }))\n      )\n      .catch((error) => this.setState({ error, status: \"rejected\" }));\n  };\n\n  handleSearchSubmit = (searchQuery) => {\n    this.setState({ query: searchQuery, page: 1, pictures: [] });\n  };\n\n  handleImageClick = (imgSrc, alt) => {\n    this.setState({ modalContent: { url: imgSrc, alt } });\n    this.toggleModal();\n  };\n\n  handleLoadMore = () => {\n    this.fetchPictures();\n  };\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({ showModal: !showModal }));\n  };\n\n  render() {\n    const { showModal, modalContent, pictures, status, error } = this.state;\n    return (\n      <div className=\"container\">\n        <Searchbar onSubmit={this.handleSearchSubmit} />\n        <ImageGallery\n          pictures={pictures}\n          status={status}\n          error={error}\n          onClick={this.handleImageClick}\n          onLoadMore={this.handleLoadMore}\n        />\n        <ToastContainer autoClose={3000} />\n        {showModal &&\n          createPortal(\n            <Modal\n              src={modalContent.url}\n              alt={modalContent.alt}\n              onClose={this.toggleModal}\n            />,\n            modalRoot\n          )}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}